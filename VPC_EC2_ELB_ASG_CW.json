{
   "Mappings":{
      "RegionMap":{
         "eu-central-1":{
            "AMI":"ami-0b418580298265d5c"
         }
      }
   },
   "Parameters":{
      "KeyName":{
         "Description":"Name of an existing EC2 KeyPair to enable SSH access to the instance",
         "Type":"String",
         "Default":"key for ubuntu"
      },
      "Scheme":{
         "Description":"Scheme of LoadBalancer",
         "Type":"String",
         "Default":"internet-facing",
         "AllowedValues":[
            "internet-facing",
            "internal"
         ]
      },
      "CidrBlockVPC":{
         "Description":"Enter CidrBlock for VPC",
         "Type":"String",
         "Default":"192.168.0.0/16"
      },
      "CidrBlockSubnetOne":{
         "Description":"Enter CidrBlock for SubnetOne",
         "Type":"String",
         "Default":"192.168.1.0/24"
      },
      "CidrBlockSubnetTwo":{
         "Description":"Enter CidrBlock for SubnetTwo",
         "Type":"String",
         "Default":"192.168.2.0/24"
      },
      "CidrBlockSubnetThree":{
         "Description":"Enter CidrBlock for SubnetThree",
         "Type":"String",
         "Default":"192.168.3.0/24"
      },
      "InstanceType":{
         "Description":"Chose instance type",
         "Type":"String",
         "Default":"t2.micro"
      }
   },
   "Resources":{
      "FinalProjectVPC":{
         "Type":"AWS::EC2::VPC",
         "Properties":{
            "CidrBlock":{
               "Ref":"CidrBlockVPC"
            },
            "EnableDnsHostnames":true,
            "EnableDnsSupport":true,
            "InstanceTenancy":"default",
            "Tags":[
               {
                  "Key":"Name",
                  "Value":"FinalProjectVPC"
               }
            ]
         }
      },
      "FinalProjectSubnetOne":{
         "Type":"AWS::EC2::Subnet",
         "Properties":{
            "MapPublicIpOnLaunch":true,
            "AvailabilityZone":"eu-central-1a",
            "VpcId":{
               "Ref":"FinalProjectVPC"
            },
            "CidrBlock":{
               "Ref":"CidrBlockSubnetOne"
            },
            "Tags":[
               {
                  "Key":"Name",
                  "Value":"PubSubnetOneFP"
               }
            ]
         }
      },
      "FinalProjectSubnetTwo":{
         "Type":"AWS::EC2::Subnet",
         "Properties":{
            "MapPublicIpOnLaunch":true,
            "AvailabilityZone":"eu-central-1b",
            "VpcId":{
               "Ref":"FinalProjectVPC"
            },
            "CidrBlock":{
               "Ref":"CidrBlockSubnetTwo"
            },
            "Tags":[
               {
                  "Key":"Name",
                  "Value":"PubSubnetTwoFP"
               }
            ]
         }
      },
      "FinalProjectSubnetThree":{
         "Type":"AWS::EC2::Subnet",
         "Properties":{
            "MapPublicIpOnLaunch":true,
            "AvailabilityZone":"eu-central-1c",
            "VpcId":{
               "Ref":"FinalProjectVPC"
            },
            "CidrBlock":{
               "Ref":"CidrBlockSubnetThree"
            },
            "Tags":[
               {
                  "Key":"Name",
                  "Value":"PubSubnetThreeFP"
               }
            ]
         }
      },
      "FinalProjectRouteTable":{
         "Type":"AWS::EC2::RouteTable",
         "Properties":{
            "VpcId":{
               "Ref":"FinalProjectVPC"
            },
            "Tags":[
               {
                  "Key":"Name",
                  "Value":"FPRT"
               }
            ]
         }
      },
      "FinalProjectRoute":{
         "Type":"AWS::EC2::Route",
         "Properties":{
            "RouteTableId":{
               "Ref":"FinalProjectRouteTable"
            },
            "DestinationCidrBlock":"0.0.0.0/0",
            "GatewayId":{
               "Ref":"InternetGateWay"
            }
         }
      },
      "RouteTableAssocSubNetOne":{
         "Type":"AWS::EC2::SubnetRouteTableAssociation",
         "Properties":{
            "SubnetId":{
               "Ref":"FinalProjectSubnetOne"
            },
            "RouteTableId":{
               "Ref":"FinalProjectRouteTable"
            }
         }
      },
      "RouteTableAssocSubNetTwo":{
         "Type":"AWS::EC2::SubnetRouteTableAssociation",
         "Properties":{
            "SubnetId":{
               "Ref":"FinalProjectSubnetTwo"
            },
            "RouteTableId":{
               "Ref":"FinalProjectRouteTable"
            }
         }
      },
      "RouteTableAssocSubNetThree":{
         "Type":"AWS::EC2::SubnetRouteTableAssociation",
         "Properties":{
            "SubnetId":{
               "Ref":"FinalProjectSubnetThree"
            },
            "RouteTableId":{
               "Ref":"FinalProjectRouteTable"
            }
         }
      },
      "InternetGateWay":{
         "Type":"AWS::EC2::InternetGateway",
         "Properties":{
            "Tags":[
               {
                  "Key":"Name",
                  "Value":"FinalProjectIGW"
               }
            ]
         }
      },
      "AttachGateway":{
         "Type":"AWS::EC2::VPCGatewayAttachment",
         "Properties":{
            "VpcId":{
               "Ref":"FinalProjectVPC"
            },
            "InternetGatewayId":{
               "Ref":"InternetGateWay"
            }
         }
      },
      "ASGLaunchConfig":{
         "Type":"AWS::AutoScaling::LaunchConfiguration",
         "Properties":{
            "AssociatePublicIpAddress":true,
            "ImageId":{
               "Fn::FindInMap":[
                  "RegionMap",
                  {
                     "Ref":"AWS::Region"
                  },
                  "AMI"
               ]
            },
            "IamInstanceProfile":{
               "Ref":"RootInstanceProfile"
            },
            "SecurityGroups":[
               {
                  "Ref":"SecGroup"
               }
            ],
            "InstanceType":{
               "Ref":"InstanceType"
            },
            "KeyName":{
               "Ref":"KeyName"
            },
            "LaunchConfigurationName":"FinalProject_ASGLC",
            "PlacementTenancy":"default",
            "UserData":{
               "Fn::Base64":{
                  "Fn::Join":[
                     "\n",
                     [
                        "#!/bin/bash",
                        "apt update",
                        "apt install nginx -y",
                        "echo \"`curl http://169.254.169.254/latest/meta-data/public-ipv4`\" > /var/www/html/index.html",
                        "service nginx restart"
                     ]
                  ]
               }
            }
         }
      },
      "AutoScalingGroup":{
         "Type":"AWS::AutoScaling::AutoScalingGroup",
         "Properties":{
            "AutoScalingGroupName":"FinalProjectASG",
            "AvailabilityZones":{
               "Fn::GetAZs":{
                  "Ref":"AWS::Region"
               }
            },
            "VPCZoneIdentifier":[
               {
                  "Ref":"FinalProjectSubnetOne"
               },
               {
                  "Ref":"FinalProjectSubnetTwo"
               },
               {
                  "Ref":"FinalProjectSubnetThree"
               }
            ],
            "TargetGroupARNs":[
               {
                  "Ref":"ElasticLoadBalancingV2TargetGroup"
               }
            ],
            "Cooldown":"300",
            "DesiredCapacity":"3",
            "HealthCheckGracePeriod":"300",
            "HealthCheckType":"EC2",
            "LaunchConfigurationName":{
               "Ref":"ASGLaunchConfig"
            },
            "MaxSize":"5",
            "MinSize":"3",
            "Tags":[
               {
                  "Key":"Name",
                  "Value":"FinalProjectASGroup",
                  "PropagateAtLaunch":"True"
               }
            ]
         }
      },
      "WebServerScaleUpPolicy":{
         "Type":"AWS::AutoScaling::ScalingPolicy",
         "Properties":{
            "AdjustmentType":"ChangeInCapacity",
            "AutoScalingGroupName":{
               "Ref":"AutoScalingGroup"
            },
            "Cooldown":"60",
            "ScalingAdjustment":"1"
         }
      },
      "WebServerScaleDownPolicy":{
         "Type":"AWS::AutoScaling::ScalingPolicy",
         "Properties":{
            "AdjustmentType":"ChangeInCapacity",
            "AutoScalingGroupName":{
               "Ref":"AutoScalingGroup"
            },
            "Cooldown":"60",
            "ScalingAdjustment":"-1"
         }
      },
      "CPUAlarmHigh":{
         "Type":"AWS::CloudWatch::Alarm",
         "Properties":{
            "AlarmDescription":"Scale-up if CPU > 90% for 10 minutes",
            "MetricName":"CPUUtilization",
            "Namespace":"AWS/EC2",
            "Statistic":"Average",
            "Period":"300",
            "EvaluationPeriods":"2",
            "Threshold":"90",
            "AlarmActions":[
               {
                  "Ref":"WebServerScaleUpPolicy"
               }
            ],
            "Dimensions":[
               {
                  "Name":"AutoScalingGroup",
                  "Value":{
                     "Ref":"AutoScalingGroup"
                  }
               }
            ],
            "ComparisonOperator":"GreaterThanThreshold"
         }
      },
      "CPUAlarmLow":{
         "Type":"AWS::CloudWatch::Alarm",
         "Properties":{
            "AlarmDescription":"Scale-down if CPU < 70% for 10 minutes",
            "MetricName":"CPUUtilization",
            "Namespace":"AWS/EC2",
            "Statistic":"Average",
            "Period":"300",
            "EvaluationPeriods":"2",
            "Threshold":"70",
            "AlarmActions":[
               {
                  "Ref":"WebServerScaleDownPolicy"
               }
            ],
            "Dimensions":[
               {
                  "Name":"AutoScalingGroup",
                  "Value":{
                     "Ref":"AutoScalingGroup"
                  }
               }
            ],
            "ComparisonOperator":"LessThanThreshold"
         }
      },
      "EC2Role":{
         "Type":"AWS::IAM::Role",
         "Properties":{
            "AssumeRolePolicyDocument":{
               "Version":"2012-10-17",
               "Statement":[
                  {
                     "Effect":"Allow",
                     "Principal":{
                        "Service":[
                           "ec2.amazonaws.com"
                        ]
                     },
                     "Action":[
                        "sts:AssumeRole"
                     ]
                  }
               ]
            },
            "Path":"/",
            "Policies":[
               {
                  "PolicyName":"FullAccessRole",
                  "PolicyDocument":{
                     "Version":"2012-10-17",
                     "Statement":[
                        {
                           "Effect":"Allow",
                           "Action":"*",
                           "Resource":"*"
                        }
                     ]
                  }
               }
            ]
         }
      },
      "RootInstanceProfile":{
         "Type":"AWS::IAM::InstanceProfile",
         "Properties":{
            "Path":"/",
            "Roles":[
               {
                  "Ref":"EC2Role"
               }
            ]
         }
      },
      "SecGroup":{
         "Type":"AWS::EC2::SecurityGroup",
         "Properties":{
            "GroupDescription":"This is Final Project SG",
            "GroupName":"FinalProjectSG",
            "SecurityGroupIngress":[
               {
                  "CidrIp":"0.0.0.0/0",
                  "Description":"IngressRulesFP80",
                  "FromPort":80,
                  "IpProtocol":"tcp",
                  "ToPort":80
               },
               {
                  "CidrIp":"0.0.0.0/0",
                  "Description":"IngressRulesFP22",
                  "FromPort":22,
                  "IpProtocol":"tcp",
                  "ToPort":22
               }
            ],
            "VpcId":{
               "Ref":"FinalProjectVPC"
            },
            "Tags":[
               {
                  "Key":"Name",
                  "Value":"SecGroupFP"
               }
            ]
         }
      },
      "ElasticLoadBalancingV2":{
         "Type":"AWS::ElasticLoadBalancingV2::LoadBalancer",
         "Properties":{
            "IpAddressType":"ipv4",
            "LoadBalancerAttributes":[
               {
                  "Key":"idle_timeout.timeout_seconds",
                  "Value":"59"
               },
               {
                  "Key":"routing.http2.enabled",
                  "Value":"true"
               }
            ],
            "Name":"FinalProjectLoadBalancer",
            "Scheme":{
               "Ref":"Scheme"
            },
            "SecurityGroups":[
               {
                  "Ref":"SecGroup"
               }
            ],
            "Subnets":[
               {
                  "Ref":"FinalProjectSubnetOne"
               },
               {
                  "Ref":"FinalProjectSubnetTwo"
               },
               {
                  "Ref":"FinalProjectSubnetThree"
               }
            ],
            "Tags":[
               {
                  "Key":"Name",
                  "Value":"MyHomeWorkLoadBalancer"
               }
            ],
            "Type":"application"
         }
      },
      "ElasticLoadBalancingV2TargetGroup":{
         "Type":"AWS::ElasticLoadBalancingV2::TargetGroup",
         "Properties":{
            "HealthCheckEnabled":"true",
            "HealthCheckIntervalSeconds":30,
            "HealthCheckPath":"/",
            "HealthCheckPort":"traffic-port",
            "HealthCheckProtocol":"HTTP",
            "HealthCheckTimeoutSeconds":5,
            "HealthyThresholdCount":5,
            "Matcher":{
               "HttpCode":"200"
            },
            "Name":"FinalProjectTargetGroup",
            "Port":80,
            "Protocol":"HTTP",
            "Tags":[
               {
                  "Key":"Name",
                  "Value":"HomeworkTargetGroupppp"
               }
            ],
            "TargetGroupAttributes":[
               {
                  "Key":"deregistration_delay.timeout_seconds",
                  "Value":"299"
               },
               {
                  "Key":"slow_start.duration_seconds",
                  "Value":"0"
               },
               {
                  "Key":"load_balancing.algorithm.type",
                  "Value":"round_robin"
               }
            ],
            "TargetType":"instance",
            "UnhealthyThresholdCount":2,
            "VpcId":{
               "Ref":"FinalProjectVPC"
            }
         }
      },
      "AWSElasticLoadBalancingV2Listener":{
         "Type":"AWS::ElasticLoadBalancingV2::Listener",
         "Properties":{
            "DefaultActions":[
               {
                  "FixedResponseConfig":{
                     "StatusCode":"503",
                     "ContentType":"text/plain",
                     "MessageBody":"You've reached the listener! Congrats!"
                  },
                  "Type":"fixed-response",
                  "Order":1
               }
            ],
            "LoadBalancerArn":{
               "Ref":"ElasticLoadBalancingV2"
            },
            "Port":80,
            "Protocol":"HTTP"
         }
      },
      "ElasticLoadBalancingV2ListenerRuleOne":{
         "Type":"AWS::ElasticLoadBalancingV2::ListenerRule",
         "Properties":{
            "Actions":[
               {
                  "Type":"forward",
                  "TargetGroupArn":{
                     "Ref":"ElasticLoadBalancingV2TargetGroup"
                  }
               }
            ],
            "Conditions":[
               {
                  "Field":"path-pattern",
                  "Values":[
                     "*"
                  ]
               }
            ],
            "ListenerArn":{
               "Ref":"AWSElasticLoadBalancingV2Listener"
            },
            "Priority":1
         }
      }
   },
   "Outputs":{
      "DNSLoadBalancer":{
         "Description":"DNS Load Balancer",
         "Value":{
            "Fn::GetAtt":[
               "ElasticLoadBalancingV2",
               "DNSName"
            ]
         }
      },
      "VPCId":{
         "Description":"This is VPC CidrBlock",
         "Value":{
            "Fn::GetAtt":[
               "FinalProjectVPC",
               "CidrBlock"
            ]
         }
      },
      "AWSRegion":{
         "Description":"AWS Region",
         "Value":{
            "Fn::Sub":"My Region is ${AWS::Region}"
         }
      }
   }
}
